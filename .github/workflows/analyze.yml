#
# Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
# SPDX-License-Identifier: Apache-2.0
#

name: CodeGuru Reviewer

on:
  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Log level'
        required: true
        default: 'debug'
      tags:
        description: 'Test scenario tags'

permissions:
  id-token: write
  contents: read
  security-events: write

jobs:
  analyze:
    runs-on: ubuntu-latest
    steps:
    - name: Assume IAM role
      id: assume-iam-role
      continue-on-error: true
      uses: aws-actions/configure-aws-credentials@v1
      with:
        role-to-assume: arn:aws:iam::048169001733:role/GuruGitHubCICDRole
        aws-region: us-west-2

    - name: Check out repository
      uses: actions/checkout@v2
      if: steps.assume-iam-role.outcome == 'success'
      with:
        fetch-depth: 0

    - name: Set up JDK
      if: steps.assume-iam-role.outcome == 'success'
      uses: actions/setup-java@v2
      with:
        java-version: '8'
        distribution: 'adopt'

    - name: Build project with Gradle
      if: steps.assume-iam-role.outcome == 'success'
      run: |
        chmod +x gradlew
        ./gradlew build

    - name: Run CodeGuru Reviewer
      id: analysis
      uses: aws-actions/codeguru-reviewer@v1.1
      if: steps.assume-iam-role.outcome == 'success'
      continue-on-error: false
      with:
        s3_bucket: codeguru-reviewer-github-profiler-demo-048169001733-uw2
        build_path: ./build/libs

    - run: cat <<< "$(jq '(..|objects|select(has("tags"))).tags |= (.|unique)' codeguru-results.sarif.json)" > codeguru-results.sarif.json

    - name: Upload full analysis results (SARIF format) to workflow artifacts
      if: steps.assume-iam-role.outcome == 'success' && steps.analysis.outcome == 'success'
      uses: actions/upload-artifact@v2
      with:
        name: codeguru-results.sarif.json
        path: codeguru-results.sarif.json

    #
    # The following step only works for free if your repo is public.
    # Upload the full SARIF analysis results to the GitHub UX.
    #

    - name: Upload full analysis results so they are shown on the GitHub Security Scans UX
      if: steps.assume-iam-role.outcome == 'success' && steps.analysis.outcome == 'success'
      uses: github/codeql-action/upload-sarif@v1
      with:
        sarif_file: codeguru-results.sarif.json

    #
    # The following steps are optional.
    # Create a one-line-per-finding CSV summary of recommendations.
    #

    - name: Save a summary of the results to a file on local disk
      if: steps.assume-iam-role.outcome == 'success' && steps.analysis.outcome == 'success'
      run: |
        echo "ruleId,filePath,lineNumber" > codeguru-results-summary.csv
        jq -r '.runs[0].results[] | {ruleId: .ruleId, firstFile: .locations[0].physicalLocation.artifactLocation.uri, firstLine: .locations[0].physicalLocation.region.startLine} | join(",")' \
          codeguru-results.sarif.json | sort >> codeguru-results-summary.csv

    - name: Upload results summary to workflow artifacts
      if: steps.assume-iam-role.outcome == 'success' && steps.analysis.outcome == 'success'
      uses: actions/upload-artifact@v2
      with:
        name: codeguru-results-summary.csv
        path: codeguru-results-summary.csv

    - name: Print summary of results to stdout
      if: steps.assume-iam-role.outcome == 'success' && steps.analysis.outcome == 'success'
      run: cat codeguru-results-summary.csv



